<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:behaviors="clr-namespace:Replay.Common.Wpf.Behaviors;assembly=Behaviors"
                    xmlns:resources="clr-namespace:Replay.Common.Wpf.CustomControls.WpfFolderBrowseDialog.Resources">
    <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="#FFF2F2F2"/>
    <SolidColorBrush x:Key="NormalBrush" Color="#E6E6E6"/>
    <SolidColorBrush x:Key="PressedBrush" Color="#E6E6E6"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Gray"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#aeb0b6" />
    <SolidColorBrush x:Key="GrayBorderBrush" Color="#FFEFEFEF"/>
    <SolidColorBrush x:Key="DarkBackground" Color="#FF4D5057" />
    <SolidColorBrush x:Key="DarkBackgroundColor" Color="#1b1f22" />
    <SolidColorBrush x:Key="SimpleButtonDisabledBrush" Color="#F0F0F0" />
    <SolidColorBrush x:Key="SimpleButtonDisabledBorder" Color="#DADADA" />
    <SolidColorBrush x:Key="DefaultButtonPressedBorder" Color="#6AB9FE" />
    <SolidColorBrush x:Key="DefaultButtonNormalBorder" Color="#001C35" />
    <SolidColorBrush x:Key="SimpleButtonPressedBorder" Color="#3C7FB0" />
    <SolidColorBrush x:Key="SimpleButtonNormalBorder" Color="#B1B1B1" />
    <SolidColorBrush x:Key="SimpleButtonFocusedBorder" Color="#6AB9FE" />

    <!-- This are path data expressions that are used to draw on controls
         M is for beggining L is for turn point Z is for ending-->
    <system:String x:Key="ArrowUpPathData">M 0 4 L 8 4 L 4 0 Z</system:String>
    <system:String x:Key="ArrowDownPathData">M 0 0 L 4 4 L 8 0 Z</system:String>
    <system:String x:Key="ArrowLeftPathData">M 4 0 L 4 8 L 0 4 Z</system:String>
    <system:String x:Key="ArrowRightPathData">M 0 0 L 4 4 L 0 8 Z</system:String>

    <LinearGradientBrush x:Key="DefaultButtonNormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#1467AF" Offset="0"/>
        <GradientStop Color="#004C96" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefaultButtonMouseOverBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#5590D0" Offset="0"/>
        <GradientStop Color="#2167B2" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SimleButtonNormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E6E6E6" Offset="0"/>
        <GradientStop Color="#D2D2D2" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SimpleButtonMouseOverBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F1F1F1" Offset="0"/>
        <GradientStop Color="#DFDFDF" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SimpleButtonPressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E4EBFE" Offset="0"/>
        <GradientStop Color="#98C0FE" Offset="1" />
    </LinearGradientBrush>
    
    <!--Button Style-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="TextElement.FontSize" Value="12" />
        <Setter Property="behaviors:CustomBehavior.Behaviors">
            <Setter.Value>
                <behaviors:CustomBehaviorCollection>
                    <behaviors:FocusDefaultButtonBehavior/>
                </behaviors:CustomBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            x:Name="Border"  
                            CornerRadius="2" 
                            BorderThickness="1.5"
                            Background="{StaticResource SimleButtonNormalBrush}"
                            BorderBrush="{StaticResource SimpleButtonNormalBorder}">
                        <ContentPresenter
                                Margin="{TemplateBinding Button.Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SimpleButtonFocusedBorder}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SimpleButtonMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SimpleButtonPressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SimpleButtonPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SimpleButtonDisabledBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SimpleButtonDisabledBorder}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true"/>
                                <Condition Property="IsDefault" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DefaultButtonNormalBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultButtonNormalBorder}" />
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true"/>
                                <Condition Property="IsDefault" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DefaultButtonMouseOverBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true"/>
                                <Condition Property="IsDefault" Value="true"/>
                                <Condition Property="IsKeyboardFocused" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultButtonPressedBorder}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Title Bar Buttons Style -->
    <Style BasedOn="{StaticResource {x:Type Button}}"  TargetType="Button"  x:Key="BorderButtonsStyle">
        <Setter Property="MinWidth" Value="23" />
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="19"/>
        <Setter Property="MinHeight" Value="19" />
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            x:Name="Border"  
                            CornerRadius="0,0,0,4" 
                            BorderThickness="0.5"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource DarkBackgroundColor}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="closeButton"/>
                                <Condition Property="IsEnabled" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img\close_button.png" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="Name" Value="closeButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img\close_button_mouseover.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="Name" Value="closeButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img\Close_button_pressed.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img\close_button_disabled.png" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Border Gray Style-->
    <Style TargetType="Border" x:Key="Graystyle">
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBackgroundBrush}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Panel.ZIndex" Value="5"/>
        <Setter Property="BorderThickness" Value="6"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!--Border Dark Style-->
    <Style TargetType="Border" x:Key="DarkStyle">
        <Setter Property="BorderBrush" Value="{StaticResource DarkBackgroundColor}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Panel.ZIndex" Value="6"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!--Basic style for our custom border-->
    <Style TargetType="UserControl" x:Key="BorderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Grid Name="MainGrid">
                        <Border Name="BlackOuterBorder"   
                                    Style="{StaticResource DarkStyle}"/>
                        <Border Name="GrayTitleBorder"   
                                    Style="{StaticResource Graystyle}"/>
                        <Border Name="BlackTitleBorder" 
                                    BorderThickness ="10,0,10,10"
                                    CornerRadius ="5"
                                    Margin="9"
                                    BorderBrush="{StaticResource DarkBackgroundColor}" 
                                    Panel.ZIndex="4">
                            <DockPanel Name="TitleCapition" 
                                           VerticalAlignment="Top"  
                                           Height="46">
                                <DockPanel.Background>
                                    <ImageBrush ImageSource="img\header_background.png" />
                                </DockPanel.Background>
                                <Button Name="closeButton"
                                            Style="{StaticResource BorderButtonsStyle}"  
                                            Command="{Binding Path=CloseCommand}"
                                            Margin="0"
                                            DockPanel.Dock="Right"
                                            HorizontalAlignment="Right"/>
                                <Label Foreground="White" 
                                           VerticalAlignment="Center"
                                           DockPanel.Dock="Right"
                                           Name="TopCaptionLable"
                                           HorizontalAlignment="Stretch">
                                    <TextBlock Name="topCaption" 
                                                   FontSize="20"
                                                   MaxHeight="46"
                                                   Text="{x:Static resources:Localization.FolderBrowseDialogTitle}"
                                                   TextWrapping="Wrap">
                                            <i:Interaction.Behaviors>
                                                <behaviors:TextFetchTextBlockBehavior/>
                                            </i:Interaction.Behaviors>
                                    </TextBlock>
                                </Label>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Name" Value="NoCloseButton">
                            <Setter TargetName="closeButton" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="closeButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="topCaption" Property="Text" Value="{x:Static resources:Localization.InputFolderNameTitle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scrollbar backgroun style-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                                Margin="1"
                                CornerRadius="2"
                                Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{StaticResource DarkBackground}"
                                  Data="{Binding Path=Content,
                                  RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                        Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                        Value="{StaticResource GrayBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scrollbar buttons settings-->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scrollbar thumb style-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                                Background="{StaticResource GrayBorderBrush}"
                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Template for vertical scrollbar-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="15"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="15"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                        CornerRadius="2"
                        Background="{StaticResource GrayBorderBrush}" />
            <RepeatButton Grid.Row="0"
                                Style="{StaticResource ScrollBarLineButton}"
                                Height="15"
                                Command="ScrollBar.LineUpCommand"
                                Content="{StaticResource ArrowUpPathData}" />
            <Track Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                                            Margin="1,0,1,0"
                                            Background="{StaticResource GrayBorderBrush}"
                                            BorderBrush="{StaticResource TextBoxBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                                    Style="{StaticResource ScrollBarLineButton}"
                                    Height="15"
                                    Command="ScrollBar.LineDownCommand"
                                    Content="{StaticResource ArrowDownPathData}"/>
        </Grid>
    </ControlTemplate>

    <!-- HorizontalScrollBar Template using the previously created Templates-->
    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="15"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="15"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2"
                    Background="{StaticResource GrayBorderBrush}" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="15"
                          Command="ScrollBar.LineLeftCommand"
                          Content="{StaticResource ArrowLeftPathData}" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"
                                           Margin="0,1,0,1"
                                           Background="{StaticResource GrayBorderBrush}"
                                           BorderBrush="{StaticResource TextBoxBorderBrush}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                  Command="ScrollBar.PageRightCommand" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Column="3" 
                                          Style="{StaticResource ScrollBarLineButton}"
                                          Width="15"
                                          Command="ScrollBar.LineRightCommand"
                                          Content="{StaticResource ArrowRightPathData}"/>
        </Grid>
    </ControlTemplate>

    <!--General scrollbar style-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="15" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style for scrollviewer-->
    <Style x:Key="ScrollViewStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                        Value="{TemplateBinding VerticalOffset}"
                                        Maximum="{TemplateBinding ScrollableHeight}"
                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" 
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>